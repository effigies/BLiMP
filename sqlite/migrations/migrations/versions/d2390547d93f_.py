"""empty message

Revision ID: d2390547d93f
Revises: 
Create Date: 2019-05-29 15:06:31.363457

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd2390547d93f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.JSON(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('dataset_address', sa.Text(), nullable=True),
    sa.Column('preproc_address', sa.Text(), nullable=True),
    sa.Column('local_path', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('extracted_feature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sha1_hash', sa.Text(), nullable=False),
    sa.Column('extractor_name', sa.String(), nullable=True),
    sa.Column('extractor_parameters', sa.JSON(), nullable=True),
    sa.Column('feature_name', sa.String(), nullable=True),
    sa.Column('original_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('modality', sa.String(), nullable=True),
    sa.Column('transformed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('extractor_version', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('google_id', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('picture', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_ip', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash_id', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('predictions', sa.Text(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('model', sa.JSON(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('saved_count', sa.Integer(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('locked', sa.Boolean(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('compile_task_id', sa.Text(), nullable=True),
    sa.Column('bundle_path', sa.Text(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Text(), nullable=True),
    sa.CheckConstraint("status IN ('PASSED', 'FAILED', 'SUBMITTING', 'PENDING', 'DRAFT')"),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['analysis.hash_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash_id')
    )
    op.create_table('group_predictor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('predictor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('original_name', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('ef_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['ef_id'], ['extracted_feature.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('stimulus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sha1_hash', sa.Text(), nullable=False),
    sa.Column('mimetype', sa.Text(), nullable=False),
    sa.Column('path', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('converter_name', sa.String(), nullable=True),
    sa.Column('converter_parameters', sa.Text(), nullable=True),
    sa.CheckConstraint('NOT(path IS NULL AND content IS NULL)'),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['stimulus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.JSON(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('TR', sa.Float(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dataset_id', 'name')
    )
    op.create_table('analysis_predictor',
    sa.Column('analysis_id', sa.Integer(), nullable=True),
    sa.Column('predictor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], ),
    sa.ForeignKeyConstraint(['predictor_id'], ['predictor.id'], )
    )
    op.create_table('extracted_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('onset', sa.Float(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('history', sa.String(), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('stimulus_id', sa.Integer(), nullable=False),
    sa.Column('ef_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ef_id'], ['extracted_feature.id'], ),
    sa.ForeignKeyConstraint(['stimulus_id'], ['stimulus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('neurovault_collection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_id', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('task_id', sa.Text(), nullable=True),
    sa.Column('collection_id', sa.Text(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.CheckConstraint("status IN ('OK', 'FAILED', 'PENDING')"),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.hash_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_id', sa.Text(), nullable=True),
    sa.Column('runs', sa.JSON(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('task_id', sa.Text(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.CheckConstraint("status IN ('OK', 'FAILED', 'PENDING')"),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.hash_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session', sa.Text(), nullable=True),
    sa.Column('acquisition', sa.Text(), nullable=True),
    sa.Column('subject', sa.Text(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session', 'subject', 'number', 'task_id', 'dataset_id')
    )
    op.create_table('analysis_run',
    sa.Column('analysis_id', sa.Integer(), nullable=True),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], )
    )
    op.create_table('group_predictor_value',
    sa.Column('gp_id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['gp_id'], ['group_predictor.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.PrimaryKeyConstraint('gp_id', 'run_id', 'level_id')
    )
    op.create_table('predictor_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('onset', sa.Float(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('predictor_id', sa.Integer(), nullable=False),
    sa.Column('stimulus_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['predictor_id'], ['predictor.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.ForeignKeyConstraint(['stimulus_id'], ['stimulus.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('onset', 'run_id', 'predictor_id', 'object_id')
    )
    op.create_index(op.f('ix_predictor_event_predictor_id'), 'predictor_event', ['predictor_id'], unique=False)
    op.create_index(op.f('ix_predictor_event_run_id'), 'predictor_event', ['run_id'], unique=False)
    op.create_index('ix_predictor_id_run_id', 'predictor_event', ['predictor_id', 'run_id'], unique=False)
    op.create_table('predictor_run',
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('predictor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['predictor_id'], ['predictor.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.PrimaryKeyConstraint('run_id', 'predictor_id')
    )
    op.create_table('run_stimulus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stimulus_id', sa.Integer(), nullable=True),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.Column('onset', sa.Float(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.ForeignKeyConstraint(['stimulus_id'], ['stimulus.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stimulus_id', 'run_id', 'onset')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('run_stimulus')
    op.drop_table('predictor_run')
    op.drop_index('ix_predictor_id_run_id', table_name='predictor_event')
    op.drop_index(op.f('ix_predictor_event_run_id'), table_name='predictor_event')
    op.drop_index(op.f('ix_predictor_event_predictor_id'), table_name='predictor_event')
    op.drop_table('predictor_event')
    op.drop_table('group_predictor_value')
    op.drop_table('analysis_run')
    op.drop_table('run')
    op.drop_table('report')
    op.drop_table('neurovault_collection')
    op.drop_table('extracted_event')
    op.drop_table('analysis_predictor')
    op.drop_table('task')
    op.drop_table('stimulus')
    op.drop_table('roles_users')
    op.drop_table('predictor')
    op.drop_table('group_predictor')
    op.drop_table('analysis')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('extracted_feature')
    op.drop_table('dataset')
    # ### end Alembic commands ###
